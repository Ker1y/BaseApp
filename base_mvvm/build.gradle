import com.hy.base.plugin.*

plugins {
    id ('com.android.library')
    id ('org.jetbrains.kotlin.android')
    id ('com.google.devtools.ksp')
    id ('kotlin-parcelize')
}
android {
    compileSdk rootProject.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        consumerProguardFiles "consumer-rules.pro"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        buildConfig true
    }
    dataBinding {
        enable = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
            jniLibs.srcDirs = ['libs']
        }
    }

    publishNonDefault true
    namespace 'me.hy.jetpackmvvm'//去除gradle对library module默认只编译release buildType的限制
}


dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation AndroidX.appcompat

    implementation AndroidX.viewPager2
    //kotlin
    implementation AndroidX.coreKtx
    //lifecycle
    api Lifecycle.runtimeKtx
    api Lifecycle.commonJava8
    api Lifecycle.extension
    // viewModel
    api Lifecycle.viewModelKtx
    api Fragment.runtimeKtx
    // liveData
    api Lifecycle.livedataKtx
    api Depend.unPeekLiveData
    //navigation
    api AndroidX.navigation
    //retrofit
    api Net.runtime
    api Net.gson
    api Net.okhttp
    api Depend.cookieJar

    //动态替换BaseUrl库 使用可参考 https://github.com/JessYanCoding/RetrofitUrlManager
    api Net.urlManager
    //工具类
    api Depend.utilCodex

}

