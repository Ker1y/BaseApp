plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

android {
    useLibrary 'org.apache.http.legacy'
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

//    signingConfigs {
//        config {
//            storeFile file('..\\key/chayuan.jks')
//            storePassword 'chayuan'
//            keyAlias 'chayuan'
//            keyPassword 'chayuan'
//        }
//    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "base_v${variant.versionName}.apk"
        }
    }

    defaultConfig {
        applicationId rootProject.applicationId
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName

        ndk {
            abiFilters 'arm64-v8a','armeabi-v7a'//,'x86'//, 'x86_64' , 'armeabi','mips','mips64',
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            zipAlignEnabled true //Zipalign优化
            shrinkResources true
            minifyEnabled true //混淆压缩
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.config
        }
        debug {
            zipAlignEnabled false
            shrinkResources false
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.config
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    androidExtensions {
        experimental = true
    }
    buildFeatures {
        dataBinding = true
    }
}

dependencies {

    implementation project(':base_mvvm')

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    //三方基础功能库
    implementation 'com.google.android.flexbox:flexbox:3.0.0'
    implementation 'com.google.android.flexbox:flexbox:3.0.0'
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'
    implementation 'com.gyf.immersionbar:immersionbar-components:3.0.0'
    implementation 'com.gyf.immersionbar:immersionbar-ktx:3.0.0'
    implementation 'com.blankj:utilcodex:1.31.0'
    implementation 'com.tencent:mmkv-static:1.2.10'
    implementation 'me.jessyan:autosize:1.2.1'
    implementation 'com.github.JavaNoober.BackgroundLibrary:libraryx:1.7.1'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.6'
    //特定功能库
    implementation 'com.afollestad.material-dialogs:core:3.3.0'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    implementation 'io.github.razerdp:BasePopup:3.1.7'
    implementation 'com.hjq:xxpermissions:8.8'
    implementation 'io.github.scwang90:refresh-layout-kernel:2.0.5'
    implementation 'io.github.scwang90:refresh-header-classics:2.0.5'
    implementation 'io.github.scwang90:refresh-header-material:2.0.5'

}